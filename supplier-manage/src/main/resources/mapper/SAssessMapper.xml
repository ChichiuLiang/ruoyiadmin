<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.supplier.mapper.SAssessMapper">

    <resultMap type="SAssess" id="SAssessResult">
        <result property="id" column="id"/>
        <result property="sortId" column="sort_id"/>
        <result property="assessName" column="assess_name"/>
        <result property="score" column="score"/>
        <result property="criteriaName" column="criteria_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="sortName" column="sort_name"/>
        <result property="status" column="status"/>
        <result property="supplierDept" column="supplier_dept"/>
    </resultMap>
    
    <resultMap type="VAssessinfo" id="VAssessinfoResult">
        <result property="oneSortId" column="one_sort_id"/>
        <result property="oneSortName" column="one_sort_name"/>
        <result property="twoSortId" column="two_sort_id"/>
        <result property="twoSortName" column="two_sort_name"/>
        <result property="threeSortId" column="three_sort_id"/>
        <result property="threeSortName" column="three_sort_name"/>
        <result property="assessName" column="assess_name"/>
        <result property="score" column="score"/>
        <result property="criteriaName" column="criteria_name"/>
        <result property="assessId" column="assess_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="supplierDept" column="supplier_dept"/>
    </resultMap>
    
    <select id="selectVAssessinfoList" parameterType="VAssessinfo" resultMap="VAssessinfoResult">
       select one_sort_id, two_sort_id, three_sort_id, one_sort_name, two_sort_name, three_sort_name,
       		  assess_id, dept_id, assess_name, score, criteria_name, supplier_dept
	   from v_assessinfo where status = '0' and dept_id = #{deptId} and one_sort_id = #{oneSortId}
	   order by numtwo,numthree,assess_id
    </select>

    <sql id="selectSAssessVo">
        select a.id, a.sort_id, a.assess_name, a.score, a.criteria_name,
              a.create_by, a.create_time, a.update_by, a.update_time, a.del_flag
              ,a.status,s.sort_name,a.supplier_dept
        from s_assess a
        left join s_kpi_sort s on s.id = a.sort_id
    </sql>

    <select id="selectSAssessList" parameterType="SAssess" resultMap="SAssessResult">
        <include refid="selectSAssessVo"/>
        where a.del_flag = '0'
        <if test="sortId != null ">and a.sort_id = #{sortId}</if>
        <if test="assessName != null  and assessName != ''">and a.assess_name like concat(concat('%', #{assessName}),
            '%')
        </if>
        <if test="score != null ">and a.score = #{score}</if>
        <if test="status != null and status != '' ">and a.status = #{status}</if>
        <if test="criteriaName != null  and criteriaName != ''">and a.criteria_name like concat(concat('%',
            #{criteriaName}), '%')
        </if>
        order by a.id
    </select>

    <select id="selectSAssessById" parameterType="Long" resultMap="SAssessResult">
        <include refid="selectSAssessVo"/>
        where a.del_flag = '0' and a.id = #{id}
    </select>
    
    <select id="checkAssessExistUse" parameterType="Long" resultType="int">
        select count(1) from s_kpi_b where assess_id = #{id} and nvl(del_flag,0)=0
    </select>

    <insert id="insertSAssess" parameterType="SAssess">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT seq_s_assess.NEXTVAL as id FROM DUAL
        </selectKey>
        insert into s_assess
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="sortId != null">sort_id,</if>
            <if test="assessName != null">assess_name,</if>
            <if test="score != null">score,</if>
            <if test="criteriaName != null">criteria_name,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="status != null and status != '' ">status,</if>
            <if test="supplierDept != null and supplierDept != '' ">supplier_dept,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="sortId != null">#{sortId},</if>
            <if test="assessName != null">#{assessName},</if>
            <if test="score != null">#{score},</if>
            <if test="criteriaName != null">#{criteriaName},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="status != null and status != '' ">#{status},</if>
            <if test="supplierDept != null and supplierDept != '' ">#{supplierDept},</if>
        </trim>
    </insert>

    <update id="updateSAssess" parameterType="SAssess">
        update s_assess
        <trim prefix="SET" suffixOverrides=",">
            <if test="sortId != null">sort_id = #{sortId},</if>
            <if test="assessName != null">assess_name = #{assessName},</if>
            <if test="score != null">score = #{score},</if>
            <if test="criteriaName != null">criteria_name = #{criteriaName},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="status != null and status != '' ">status = #{status},</if>
            <if test="supplierDept != null">supplier_dept = #{supplierDept},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="changeStatus" parameterType="SAssess">
        update s_assess set status = #{status} where id = #{id}
    </update>

    <delete id="deleteSAssessById" parameterType="Long">
        update s_assess set del_flag = '1' where id = #{id}
    </delete>

    <delete id="deleteSAssessByIds" parameterType="String">
        update s_assess set del_flag = '1' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchAssessDept" useGeneratedKeys="false">
        insert all
        <foreach item="item" index="index" collection="list">
            into s_assess_dept(assess_id, dept_id) values (#{item.assessId},#{item.deptId})
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <delete id="deleteAssessDeptByAssessId" parameterType="Long">
		delete from s_assess_dept where assess_id=#{assessId}
	</delete>
</mapper>